/*
 * Copyright (C) 2018 Mechabellum contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

buildscript {
    ext {
        javaVersion = JavaVersion.VERSION_1_8
        junitVersion = '5.1.1'
        kotlinVersion = '1.2.31'
    }

    repositories {
        jcenter()
        maven {
            url = 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath group: 'gradle.plugin.org.jmailen.gradle', name: 'kotlinter-gradle', version: '1.11.1'
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: kotlinVersion
    }
}

plugins {
    id 'base'
}

allprojects {
    group = 'mechabellum-server'
    version = '0.1.0'
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'kotlin'
    apply plugin: 'org.jmailen.kotlinter'

    sourceCompatibility = javaVersion

    repositories {
        jcenter()
    }

    dependencies {
        api group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlinVersion
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
        testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
    }

    compileKotlin {
        kotlinOptions.jvmTarget = javaVersion
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = javaVersion
    }

    kotlin {
        experimental {
            coroutines 'enable'
        }
    }

    test {
        useJUnitPlatform()
    }
}
